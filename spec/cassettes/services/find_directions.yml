---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/directions/json?destination=1331%2017th%20St%20Denver%20CO&key=AIzaSyDKVAjjrYXvJzS53rbXCcGZsX7FZplSeoI&origin=2001%20Blake%20St%20Denver%20CO
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 07 Sep 2017 21:01:52 GMT
      Expires:
      - Fri, 08 Sep 2017 21:01:52 GMT
      Cache-Control:
      - public, max-age=86400
      Vary:
      - Accept-Language
      Server:
      - mafe
      Content-Length:
      - '1487'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 07 Sep 2017 21:01:52 GMT
recorded_with: VCR 3.0.3
